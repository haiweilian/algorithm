// https://www.cxyxiaowu.com/1959.html
// 常数阶 O(1)
// 线性阶 O(n)
// 平方阶 O(n²)
// 对数阶 O(logn)
// 线性对数阶 O(nlogn)

// 大小比较 O(1) < O(logn) < O(n) < O(nlogn) < O(n^2) < O(n^3) < O(2^n)

// ================================= O(1) =================================
// 如果算法执行所需要的临时空间不随着某个变量 n 的大小而变化，即此算法空间复杂度为一个常量，可表示为 O(1)
function listO1(n) {
  let arr = []
  for (let i = 0; i < n; i++) {
    arr[0] = i
  }
}

// ================================= O(n) =================================
// 空间随着变量 n 的大小而变化，可表示为 O(n)
function listOn(n) {
  let arr = []
  for (let i = 0; i < n; i++) {
    arr.push(arr)
  }
}
