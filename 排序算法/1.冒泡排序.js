// 从序列的一端开始往另一端冒泡，依次比较相邻两个数的大小。
// 如：[ 8, 2, 5, 9, 7] ==> 从左往右依次冒泡，将小的往右移动
// 第一次比较：8 和 2 比较；发现 8 比 2 大 不做改动。
// 第二次比较：2 和 5 比较；发现 2 比 5 小 交换位置。[ 8, 2, 5, 9, 7] ==> [ 8, 5, 2, 9, 7]
// 第三次比较：2 和 9 比较；发现 2 比 9 小 交换位置。[ 8, 5, 2, 9, 7] ==> [ 8, 5, 9, 2, 7]
// 第四次比较：2 和 7 比较；发现 2 比 7 小 交换位置。[ 8, 5, 9, 2, 7] ==> [ 8, 5, 9, 7, 2]
// 第一轮比较结束：最小的已经排在最末尾了。
// ...

let arr = [8, 2, 5, 9, 7]

function sort(arr) {
  // 最后一个不用比较；所以比较轮数是 arr.length - 1
  for (let i = 0; i < arr.length - 1; i++) {
    // 最后一个不用比较 & 每比较一轮都会多出一个排好序的数字；所以比较此时是 arr.length - 1 - i
    for (let j = 0; j < arr.length - 1 - i; j++) {
      // 1、根据判断，使用临时变量交换位置
      // let temp = 0
      // if (arr[j] < arr[j + 1]) {
      //   temp = arr[j]
      //   arr[j] = arr[j + 1]
      //   arr[j + 1] = temp
      // }

      // 2、根据判断，使用解构赋值交换位置
      if (arr[j] < arr[j + 1]) {
        ;[arr[j], arr[j + 1]] = [arr[j + 1], arr[j]]
      }
    }
  }
  return arr
}

console.log(sort(arr))
